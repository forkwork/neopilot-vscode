name: Publish Collab Server Image

on:
  push:
    tags:
      - collab-production
      - collab-staging

env:
  DOCKER_BUILDKIT: 1

jobs:
  style:
    name: Check formatting and Clippy lints
    if: github.repository_owner == 'khulnasoft-lab'
    runs-on:
      - self-hosted
      - test
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: false
          fetch-depth: 0

      - name: Run style checks
        uses: ./.github/actions/check_style

      - name: Run clippy
        run: ./script/clippy

  tests:
    name: Run tests
    runs-on:
      - self-hosted
      - test
    needs: style
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: false
          fetch-depth: 0

      - name: Install cargo nextest
        shell: bash -euxo pipefail {0}
        run: |
          cargo install cargo-nextest --locked

      - name: Limit target directory size
        shell: bash -euxo pipefail {0}
        run: script/clear-target-dir-if-larger-than 100

      - name: Run tests
        shell: bash -euxo pipefail {0}
        run: cargo nextest run --package collab --no-fail-fast

  publish:
    name: Publish collab server image
    needs:
      - style
      - tests
    runs-on:
      - buildjet-16vcpu-ubuntu-2204
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Sign into DigitalOcean docker registry
        run: doctl registry login

      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: false

      - name: Build docker image
        run: |
          docker build -f Dockerfile-collab \
            --build-arg GITHUB_SHA=$GITHUB_SHA \
            --tag registry.digitalocean.com/neopilot/collab:$GITHUB_SHA \
            .

      - name: Publish docker image
        run: docker push registry.digitalocean.com/neopilot/collab:${GITHUB_SHA}

      - name: Prune Docker system
        run: docker system prune  --filter 'until=72h' -f

  deploy:
    name: Deploy new server image
    needs:
      - publish
    runs-on:
      - buildjet-16vcpu-ubuntu-2204

    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          clean: false

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Sign into Kubernetes
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Start rollout
        run: |
          set -eu
          if [[ $GITHUB_REF_NAME = "collab-production" ]]; then
            export NEOPILOT_KUBE_NAMESPACE=production
            export NEOPILOT_COLLAB_LOAD_BALANCER_SIZE_UNIT=10
            export NEOPILOT_API_LOAD_BALANCER_SIZE_UNIT=2
          elif [[ $GITHUB_REF_NAME = "collab-staging" ]]; then
            export NEOPILOT_KUBE_NAMESPACE=staging
            export NEOPILOT_COLLAB_LOAD_BALANCER_SIZE_UNIT=1
            export NEOPILOT_API_LOAD_BALANCER_SIZE_UNIT=1
          else
            echo "cowardly refusing to deploy from an unknown branch"
            exit 1
          fi

          echo "Deploying collab:$GITHUB_SHA to $NEOPILOT_KUBE_NAMESPACE"

          source script/lib/deploy-helpers.sh
          export_vars_for_environment $NEOPILOT_KUBE_NAMESPACE

          export NEOPILOT_DO_CERTIFICATE_ID=$(doctl compute certificate list --format ID --no-header)
          export NEOPILOT_IMAGE_ID="registry.digitalocean.com/neopilot/collab:${GITHUB_SHA}"

          export NEOPILOT_SERVICE_NAME=collab
          export NEOPILOT_LOAD_BALANCER_SIZE_UNIT=$NEOPILOT_COLLAB_LOAD_BALANCER_SIZE_UNIT
          envsubst < crates/collab/k8s/collab.template.yml | kubectl apply -f -
          kubectl -n "$NEOPILOT_KUBE_NAMESPACE" rollout status deployment/$NEOPILOT_SERVICE_NAME --watch
          echo "deployed ${NEOPILOT_SERVICE_NAME} to ${NEOPILOT_KUBE_NAMESPACE}"

          export NEOPILOT_SERVICE_NAME=api
          export NEOPILOT_LOAD_BALANCER_SIZE_UNIT=$NEOPILOT_API_LOAD_BALANCER_SIZE_UNIT
          envsubst < crates/collab/k8s/collab.template.yml | kubectl apply -f -
          kubectl -n "$NEOPILOT_KUBE_NAMESPACE" rollout status deployment/$NEOPILOT_SERVICE_NAME --watch
          echo "deployed ${NEOPILOT_SERVICE_NAME} to ${NEOPILOT_KUBE_NAMESPACE}"
